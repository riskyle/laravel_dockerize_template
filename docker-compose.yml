services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
       - ./:/var/www
       - /var/www/vendor
       - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    networks:
      - app-network
    depends_on:
      pgsql:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "${FORWARD_NGINX_PORT:-80}:80"
      - "${FORWARD_NGINX_SSL_PORT:-443}:443"
    networks:
      - app-network
    depends_on:
      - app

  pgsql:
    image: 'postgres:17-alpine'
    ports:
        - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
        PGPASSWORD: '${DB_PASSWORD}'
        POSTGRES_DB: '${DB_DATABASE}'
        POSTGRES_USER: '${DB_USERNAME}'
        POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
        - 'pgsql-data:/var/lib/postgresql/data'
        - './docker-data/init/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
        - app-network
    healthcheck:
        test:
            - CMD
            - pg_isready
            - '-q'
            - '-d'
            - '${DB_DATABASE}'
            - '-U'
            - '${DB_USERNAME}'
        retries: 3
        timeout: 5s
        interval: 10s

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "${FORWARD_PGADMIN_PORT:-8080}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - pgsql

networks:
  app-network:
    driver: bridge

volumes:
  pgsql-data:
    driver: local
  pgadmin-data:
    driver: local